name: CI/CD

on:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Login
        id: login
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push client Docker image
        uses: docker/build-push-action@v5.1.0
        with:
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.CLIENT_DOCKER_IMAGE }}

      - name: Docker Logout
        if: always()
        run: docker logout ${{ steps.login.outputs.registry }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Copy docker-compose
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: "~/Portfolio/client"

      - name: Docker Login
        id: login
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Put environment variables and run containers
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/Portfolio/client
            if [ -f .env ]; then
            rm .env
            fi
            touch .env
            echo "CLIENT_DOCKER_IMAGE=${{ secrets.CLIENT_DOCKER_IMAGE }}" >> .env
            docker-compose down
            docker rmi ${{ secrets.CLIENT_DOCKER_IMAGE }}
            docker-compose up -d

      - name: Docker Logout
        if: always()
        run: docker logout ${{ steps.login.outputs.registry }}
